{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d112418b_37cc3abf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2023-12-14T18:50:49Z",
      "side": 1,
      "message": "Test: Manual: All operations are in the work profile. Begin without Tor Browser installed. Disconnect and reconnect Orbot. Install Tor Browser. Try to use Tor Browser. It should connect successfully.\n\nThe above test is failing. If I disconnect and reconnect Orbot, it starts working... so I think this change isn\u0027t working.\n\nLet me know I\u0027m misunderstanding this change.",
      "revId": "f24e52164c24882e1d2e5a4f7036e8b126e29102",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b4038b7_d100bcf4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-12-14T18:54:41Z",
      "side": 1,
      "message": "Can you verify what\u0027s in the vpn lockdown allowlist when this is being executed? If TOR browser is missing, why is it so?",
      "parentUuid": "d112418b_37cc3abf",
      "revId": "f24e52164c24882e1d2e5a4f7036e8b126e29102",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2cf012b_4fd6723a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-12-14T18:56:07Z",
      "side": 1,
      "message": "If this change triggers, setVpnForcedLocked, in the previous change, it should be always adding TOR browser",
      "parentUuid": "0b4038b7_d100bcf4",
      "revId": "f24e52164c24882e1d2e5a4f7036e8b126e29102",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e699bfa3_f654ca8b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2023-12-14T19:05:12Z",
      "side": 1,
      "message": "Is there a command I can use to check that, or do I have to debug? If you\u0027re thinking of this:\n```\nadb shell settings --user 10 list secure | grep always`\nalways_on_vpn_lockdown_whitelist\u003d\n```\n^ It\u0027s empty all the time, and I think that\u0027s normal because we\u0027re not changing it.",
      "parentUuid": "a2cf012b_4fd6723a",
      "revId": "f24e52164c24882e1d2e5a4f7036e8b126e29102",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1980140_a37cba3d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2023-12-14T21:00:04Z",
      "side": 1,
      "message": "The change is triggered. setVpnForcedLocked is reached. The package is detected as present, matching, and its uid is successfully retrieved. But ultimately it doesn\u0027t end up being reflected in `ip rule` until disconnecting and reconnecting Orbot. This will need more troubleshooting/debugging.",
      "parentUuid": "e699bfa3_f654ca8b",
      "revId": "f24e52164c24882e1d2e5a4f7036e8b126e29102",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9edd3e10_7aa6c56a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2023-12-14T21:00:29Z",
      "side": 1,
      "message": "It also seems to be a race somehow, because if debugging with breakpoints, the issue does not occur.",
      "parentUuid": "d1980140_a37cba3d",
      "revId": "f24e52164c24882e1d2e5a4f7036e8b126e29102",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbf2d0de_95e80c9b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2023-12-14T22:07:34Z",
      "side": 1,
      "message": "When Tor Browser is working:\n`HAPPY_BOX_MATCH RESTRICTED_MATCH`\n\nWhen it is not working:\n`HAPPY_BOX_MATCH RESTRICTED_MATCH IIF_MATCH ##`\n\n1. Connect Orbot.\n2. Install Tor Browser.\n3. Get its work profile uid via `adb shell pm list packages -U | grep -F org.torproject.torbrowser`\n4. `adb shell dumpsys connectivity trafficcontroller | grep $uid`\n5. You\u0027ll see the \"not working\" result unless you\u0027re lucky, and it won\u0027t work.\n6. Disconnect and reconnect Orbot.\n7. Repeat step 4 and you\u0027ll see the \"working\" result, and it will work.\n\nConnectivity\u0027s PermissionMonitor adjusts IIF_MATCH with updateVpnUid and some other methods, either in response to package changes or called from ConnectivityService. It doesn\u0027t look like the package change response is the conflict, oddly, but I could be wrong.",
      "parentUuid": "9edd3e10_7aa6c56a",
      "revId": "f24e52164c24882e1d2e5a4f7036e8b126e29102",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b289559_6ad99bc7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2023-12-15T17:29:55Z",
      "side": 1,
      "message": "I understand this a bit better now and found a couple of things that seem to work.\n\nTor Browser and Briar don\u0027t only need to be added to the lockdown allowlist (which is an aspect that is working properly); they also need to be successfully processed as part of Orbot\u0027s disallowedApplications list. That list is currently only processed in one of two circumstances:\n- when Orbot is reconnected,\n- when the lockdown toggle is turned off and on (more on that later).\n\nWhen testing this, if Tor Browser is uninstalled or installed, the VPN\u0027s covered UIDs are not updated to reflect this, nor is the required ingress interface (IIF_MATCH), so Tor Browser will remain within Orbot\u0027s covered range when it is installed. Even though it\u0027s *allowed* to bypass VPN lockdown, it isn\u0027t coded to go out of its way to do that, so it simply uses the VPN and fails.\n\nFor example (and I\u0027ve tried this), if you add Chromium to the allowlist, Chromium will still be covered by Orbot and will have the IIF_MATCH, even if you disconnect, reconnect, etc. To allow otherwise, we need to open Orbot and \"Choose apps\" in a way that doesn\u0027t include Chromium. Only then will Chromium bypass Orbot.\n\nSo, we know that stopping and starting Orbot fixes the problem, but another working fix is turning lockdown off and on again in the Settings. Isn\u0027t that basically what we\u0027re doing? Well, no... We\u0027re only setting its always-on state again, to the same values, to force it to update.\n\nFor some reason, in order for the covered UID ranges and the IIF_MATCH state to be updated properly, that isn\u0027t enough. However, toggling it off and then on again, like this, does work (confirmed):\n```\n            if (vpn.getLockdown()) {\n                vpn.setAlwaysOnPackage(vpn.getAlwaysOnPackage(), false,\n                        vpn.getLockdownAllowlist());\n                vpn.setAlwaysOnPackage(vpn.getAlwaysOnPackage(), true,\n                        vpn.getLockdownAllowlist());\n            }\n```\n\nBut it\u0027s not really ideal. We don\u0027t ever want to turn it off. So, why does it work? It appears to work because a new network agent is started, and that new network agent happens to also update the covered UIDs.\n\nFrom Vpn.java:\n```\n            // Lockdown forces the VPN to be non-bypassable (see #agentConnect) because it makes\n            // no sense for a VPN to be bypassable when connected but not when not connected.\n            // As such, changes in lockdown need to restart the agent.\n            if (mNetworkAgent !\u003d null \u0026\u0026 oldLockdownState !\u003d mLockdown) {\n                startNewNetworkAgent(mNetworkAgent, \"Lockdown mode changed\");\n            }\n```\n\nIf we modify the above so that it always starts a new network agent when the always-on vpn state is set and lockdown is on...\n```\n            if (mNetworkAgent !\u003d null \u0026\u0026 ((oldLockdownState !\u003d mLockdown) || mLockdown)) {\n```\n\nThat also resolves this issue, and should do so without the risk of leaking traffic, although I\u0027m not sure of the other implications of creating a new network agent more often, since this would create one any time the always-on state was set while lockdown is on.\n\nThere might be another, better way to handle this; just dumping the info I\u0027ve gleaned so far.\n\n(Also, I can\u0027t explain the apparent \"race condition\" element I mentioned earlier.)",
      "parentUuid": "bbf2d0de_95e80c9b",
      "revId": "f24e52164c24882e1d2e5a4f7036e8b126e29102",
      "serverId": "35266860-6252-469c-a67d-185064479fc0"
    }
  ]
}